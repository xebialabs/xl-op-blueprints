K8sSetup: {{ .K8sSetup }}
UseCustomNamespace: {{ .UseCustomNamespace }}
Namespace: {{ .Namespace }}
ServerType: {{ .ServerType }}
ImageRegistryType: {{ .ImageRegistryType }}
IsCustomImageRegistry: {{ .IsCustomImageRegistry }}
CustomImageRegistryName: {{ .CustomImageRegistryName }}
CustomPrivateImageRegistrySecret: {{ .CustomPrivateImageRegistrySecret }}
RepositoryName: {{ .RepositoryName }}
ImageTag: {{ .ImageTag }}
OperatorImageTag: {{ .OperatorImageTag }}
{{- if eq .ServerType "dai-deploy" }}
ImageNameDeploy: {{ .ImageNameDeploy }}
ImageNameDeployTaskEngine: {{ .ImageNameDeployTaskEngine }}
ImageNameCc: {{ .ImageNameCc }}
OperatorImageDeploy: {{ .OperatorImageDeploy }}
XldMasterCount: {{ .XldMasterCount }}
XldWorkerCount: {{ .XldWorkerCount }}
  {{- if eq .ProcessType "upgrade" }}
PreserveCrValuesDeploy: |-
{{ .PreserveCrValuesDeploy | indent 2 }}
  {{- end }}
PostgresqlExternalConfigDeploy: |-
{{ .PostgresqlExternalConfigDeploy | indent 2 }}
RabbitmqExternalConfigDeploy: |-
{{ .RabbitmqExternalConfigDeploy | indent 2 }}
{{- end }}
{{- if eq .ServerType "dai-release" }}
ImageNameRelease: {{ .ImageNameRelease }}
OperatorImageRelease: {{ .OperatorImageRelease }}
XlrReplicaCount: {{ .XlrReplicaCount }}
  {{- if eq .ProcessType "upgrade" }}
PreserveCrValuesRelease: |-
{{ .PreserveCrValuesRelease | indent 2 }}
  {{- end }}
PostgresqlExternalConfigRelease: |-
{{ .PostgresqlExternalConfigRelease | indent 2  }}
RabbitmqExternalConfigRelease: |-
{{ .RabbitmqExternalConfigRelease | indent 2 }}
{{- end }}
OidcConfigTypeInstall: '{{ .OidcConfigTypeInstall }}'
OidcConfigTypeUpgrade: '{{ .OidcConfigTypeUpgrade }}'
ExternalOidcConfGenericDeploy: |-
{{ .ExternalOidcConfGenericDeploy | indent 2 }}
ExternalOidcConfGenericRelease: |-
{{ .ExternalOidcConfGenericRelease | indent 2 }}
IdentityServiceConfDeploy: |-
{{ .IdentityServiceConfDeploy | indent 2 }}
IdentityServiceConfRelease: |-
{{ .IdentityServiceConfRelease | indent 2 }}
{{- if eq .ProcessType "install" }}
IngressTypeGeneric: '{{ .IngressTypeGeneric }}'
IngressTypeOpenshift: '{{ .IngressTypeOpenshift }}'
ExternalIngressClass: '{{ .ExternalIngressClass }}'
HttpProtocolIngress: '{{ .HttpProtocolIngress }}'
IngressKeystoreSource: '{{ .IngressKeystoreSource }}'
IngressTlsSecretName: '{{ .IngressTlsSecretName }}'
AdminPassword: '{{ .AdminPassword }}'
StorageClass: '{{ .StorageClass }}'
IngressHost: '{{ .IngressHost }}'
EnablePostgresql: {{ .EnablePostgresql }}
PostgresqlStorageClass: '{{ .PostgresqlStorageClass }}'
EnableRabbitmq: {{ .EnableRabbitmq }}
RabbitmqReplicaCount: '{{ .RabbitmqReplicaCount }}'
RabbitmqStorageClass: '{{ .RabbitmqStorageClass }}'
LicenseSource: '{{ .LicenseSource }}'
LicenseEditor:  |-
{{ .LicenseEditor | trim | indent 2 }}
LicenseFile: '{{ .LicenseFile }}'
RepositoryKeystoreSource: '{{ .RepositoryKeystoreSource }}'
RepositoryKeystoreEditor: |-
{{ .RepositoryKeystoreEditor | trim | indent 2 }}
RepositoryKeystoreFile: '{{ .RepositoryKeystoreFile }}'
KeystorePassphrase: '{{ .KeystorePassphrase }}'
PostgresqlPvcSize: '{{ .PostgresqlPvcSize }}'
RabbitmqPvcSize: '{{ .RabbitmqPvcSize }}'
  {{- if eq .ServerType "dai-release" }}
PvcSizeRelease: '{{ .PvcSizeRelease }}'
AccessModeRelease: '{{ .AccessModeRelease }}'
  {{- end }}
HttpProtocolRelease: '{{ .HttpProtocolRelease }}'
HttpProtocolDeploy: '{{ .HttpProtocolDeploy }}'
ApplicationKeystoreSource: '{{ .ApplicationKeystoreSource }}'
ApplicationKeystoreEditor: |-
{{ .ApplicationKeystoreEditor | trim | indent 2 }}
ApplicationKeystoreFile: '{{ .ApplicationKeystoreFile }}'
ApplicationKeystoreSecretName: '{{ .ApplicationKeystoreSecretName }}'
ApplicationKeystore: '{{ .ApplicationKeystore }}'
ApplicationKeystoreType: '{{ .ApplicationKeystoreType }}'
ApplicationKeystorePassword: '{{ .ApplicationKeystorePassword }}'
ApplicationKeystoreKeyPassword: '{{ .ApplicationKeystoreKeyPassword }}'
  {{- if eq .ServerType "dai-deploy" }}
PvcSizeDeploy: '{{ .PvcSizeDeploy }}'
PvcSizeDeployTaskEngine: '{{ .PvcSizeDeployTaskEngine }}'
AccessModeDeploy: '{{ .AccessModeDeploy }}'
  {{- end }}
{{- end }}
{{- if eq .ProcessType "upgrade" }}
UpgradeType: {{ .UpgradeType }}
  {{- if eq .UpgradeType "helmToOperator" }}
ReleaseName: '{{ .ReleaseName }}'
  {{- end }}
{{- end }}
CrdName: '{{ .CrdName }}'
IsCrdReused: {{ .IsCrdReused }}
CrName: '{{ .CrName }}'
{{- if and (or (eq .ProcessType "clean") .CleanBefore) (ne .ServerType "dai-release-remote-runner") }}
PreservePvc: {{ .PreservePvc }}
{{- end }}
ImageNameRemoteRunner: '{{ .ImageNameRemoteRunner }}'
ImageTagRemoteRunner: '{{ .ImageTagRemoteRunner }}'
RemoteRunnerInstallConfirm: '{{ .RemoteRunnerInstallConfirm }}'
RemoteRunnerRepositoryName: '{{ .RemoteRunnerRepositoryName }}'
RemoteRunnerReleaseName: '{{ .RemoteRunnerReleaseName }}'
RemoteRunnerUseDefaultLocation: {{ .RemoteRunnerUseDefaultLocation }}
RemoteRunnerHelmChartUrl: '{{ .RemoteRunnerHelmChartUrl }}'
RemoteRunnerReleaseUrl: '{{ .RemoteRunnerReleaseUrl }}'
RemoteRunnerToken: '{{ .RemoteRunnerToken }}'
RemoteRunnerUserEmail: '{{ .RemoteRunnerUserEmail }}'
RemoteRunnerUserPassword: '{{ .RemoteRunnerUserPassword }}'
RemoteRunnerTokenExpiration: '{{ .RemoteRunnerTokenExpiration }}'
RemoteRunnerCount: {{ .RemoteRunnerCount }}
IsRemoteRunnerTruststoreEnabled: {{ .IsRemoteRunnerTruststoreEnabled }}
RemoteRunnerTruststore: |- 
{{ .RemoteRunnerTruststore | trim | indent 2 }}
RemoteRunnerTruststorePassword: {{ .RemoteRunnerTruststorePassword }}
