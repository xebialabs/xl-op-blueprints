apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
    control-app: digitalai-deploy
  name: xld-operator-controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
      control-app: digitalai-deploy
  template:
    metadata:
      labels:
        control-plane: controller-manager
        control-app: digitalai-deploy
    spec:
      {{- if eq .ImageRegistryType "private" }}
      imagePullSecrets:
        - name: {{ .CustomPrivateImageRegistrySecret }}
      {{- end }}
      containers:
      - name: kube-rbac-proxy
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
        {{- if eq .IsCustomImageRegistry true }}
        image: {{ .CustomImageRegistryName }}/{{ .RepositoryName }}/kube-rbac-proxy:v0.13.1
        {{- else }}
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.1
        {{- end }}
        args:
        - "--secure-listen-address=0.0.0.0:8443"
        - "--upstream=http://127.0.0.1:8080/"
        - "--logtostderr=true"
        - "--v=10"
        ports:
        - containerPort: 8443
          protocol: TCP
          name: https
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
      - name: manager
        args:
        - "--health-probe-bind-address=:8081"
        - "--metrics-bind-address=127.0.0.1:8080"
        - "--leader-elect"
        - "--leader-election-id=xld-operator-controller-manager"
        {{- if eq .IsCustomImageRegistry true }}
        image: {{ .CustomImageRegistryName }}/{{ .RepositoryName }}/{{ .OperatorImageDeploy }}:{{ .OperatorImageTag }}
        {{- else }}
        image: {{ .RepositoryName }}/{{ .OperatorImageDeploy }}:{{ .OperatorImageTag }}
        {{- end }}
        imagePullPolicy: IfNotPresent
        env:
        - name: WATCH_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        livenessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 50Mi
      terminationGracePeriodSeconds: 10
