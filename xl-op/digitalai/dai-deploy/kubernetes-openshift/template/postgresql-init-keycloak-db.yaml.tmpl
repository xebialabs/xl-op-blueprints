apiVersion: batch/v1
kind: Job
metadata:
  {{- if eq .UseCustomNamespace true }}
  name: dai-ocp-xld-{{ .Namespace }}-postgresql-init-keycloak-db
  {{- else }}
  name: dai-ocp-xld-postgresql-init-keycloak-db
  {{- end }}
  labels:
    app: digitalai-deploy
spec:
  template:
    metadata:
      {{- if eq .UseCustomNamespace true }}
      name: dai-ocp-xld-{{ .Namespace }}-postgresql-init-keycloak-db
      {{- else }}
      name: dai-ocp-xld-postgresql-init-keycloak-db
      {{- end }}
    spec:
      {{- if eq .ImageRegistryType "private" }}
      imagePullSecrets:
        - name:  {{ .CustomPrivateImageRegistrySecret }}
      {{- end }}    
      initContainers:
        - name: wait-for-postgresql
          {{- if eq .IsCustomImageRegistry true }}
          image: {{ .CustomImageRegistryName }}/{{ .RepositoryName }}/tiny-tools:22.2.0
          {{- else }}        
          image: xebialabs/tiny-tools:22.2.0
          {{- end }}          
          command:
            - sh
            - -c
            - >
              until nc -z -w 2 $POSTGRES_SVC_NAME $POSTGRES_PORT && echo database ok; do
              sleep 2;
              done;
          env:
            {{- if eq .UseCustomNamespace true }}
            - name: POSTGRES_SVC_NAME
              value: {{ .CrName }}-postgresql
            {{- else }}
            - name: POSTGRES_SVC_NAME
              value: dai-ocp-xld-postgresql
            {{- end }}
            - name: POSTGRES_PORT
              value: "5432"
      containers:
        - name: postgresql-init-keycloak-db
          {{- if eq .IsCustomImageRegistry true }}
          image: {{ .CustomImageRegistryName }}/{{ .RepositoryName }}/tiny-tools:22.2.0
          {{- else }}        
          image: xebialabs/tiny-tools:22.2.0
          {{- end }}
          command:
            - sh
            - -c
            - >
              export PGPASSWORD=$PGPASSWORD;
              output=$(psql -h $POSTGRES_SVC_NAME -p $POSTGRES_PORT -U $USERNAME --password -lqt);
              if [[ $? -ne 0 ]]; then
                echo "Cannot connect to the DB server $POSTGRES_SVC_NAME";
                exit 1;
              fi;
              if echo "$output" | cut -d \| -f 1 | grep -qw $SCHEMA_NAME; then
                echo "Database $SCHEMA_NAME exists, nothing to do";
              else
                echo "Database $SCHEMA_NAME will be created";
                psql -h $POSTGRES_SVC_NAME -p $POSTGRES_PORT -U $USERNAME --password -f /var/init-sql-keycloak/init-keycloak.sql;
                if [[ $? -ne 0 ]]; then
                  echo "Cannot connect to the DB server $POSTGRES_SVC_NAME";
                  exit 1;
                fi;
              fi;
          env:
            {{- if eq .UseCustomNamespace true }}
            - name: POSTGRES_SVC_NAME
              value: {{ .CrName }}-postgresql
            {{- else }}
            - name: POSTGRES_SVC_NAME
              value: dai-ocp-xld-postgresql
            {{- end }}
            - name: POSTGRES_PORT
              value: "5432"
            - name: PGPASSWORD
              value: "postgres"
            - name: USERNAME
              value: postgres
            - name: SCHEMA_NAME
              value: keycloak
          volumeMounts:
            - mountPath: /var/init-sql-keycloak
              name: dai-ocp-xld-init-sql-keycloak
      volumes:
        - name: dai-ocp-xld-init-sql-keycloak
          secret:
            {{- if eq .UseCustomNamespace true }}
            secretName: dai-ocp-xld-{{ .Namespace }}-postgresql-init-sql-keycloak
            {{- else }}
            secretName: dai-ocp-xld-postgresql-init-sql-keycloak
            {{- end }}
      restartPolicy: Never
  backoffLimit: 1
